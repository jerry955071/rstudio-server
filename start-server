#!/bin/bash
# use bash strict mode
set -euo pipefail
IFS=$'\n\t'


# check if project name and work dir is provided
if [[ $# -ne 2 ]]; then
    echo "Usage: $0 <project-name> <work-dir>" >&2
    exit 1
fi
PROJECT_NAME=$1
WORK_DIR=$2

# check if project name is used
if [[ -n $(docker compose ls | grep $WORK_DIR) ]]; then
    echo $(docker compose ls | grep -C 100 $WORK_DIR) >&2
    echo "Project name $WORK_DIR is already in use" >&2
    exit 1
fi

# check if project name is a valid docker-compose project name
if [[ ! $WORK_DIR =~ ^[a-z0-9_-]+$ ]]; then
    echo "'$WORK_DIR' is not a valid docker-compose project name" >&2
    echo "Project name should be consist of lowercase, decimal digits, dashes, and underscores" >&2
    exit 1
fi

# find empty port (start from 8787)
PORT=8787
while :; do
    if [[ -n $(ss -tulpn | grep :$PORT) ]]; then
        PORT=$(( $PORT + 1 ))
    else
        break
    fi
done

# make docker-compose file
echo "# created $(date +%Y%m%d-%H:%M:%S)" > docker-compose.yaml
echo """\
version: '3.6'
services:
  server:
    build:
      dockerfile: Dockerfile
    restart: unless-stopped
    command: /init
    environment:
      - TZ=$(cat /etc/timezone)
      - USERID=$(id -u)
      - GROUPID=$(id -g)
      - DISABLE_AUTH=true
    ports:
      - ${PORT}:8787
    volumes:""" >> docker-compose.yaml
# mount $WORK_DIR to /home/rstudio/local
echo \
"""\
      - $WORK_DIR:/home/rstudio/local:rw\
""" >> docker-compose.yaml

# mount all symlinks under $WORK_DIR to /home/rstudio/<symlink-name>
for symlink in $(find $WORK_DIR -type l); do
    echo "      - $(readlink -f $symlink):/home/rstudio/local/$(basename $symlink):rw" >> docker-compose.yaml
done


echo "# created $(date +%Y%m%d-%H:%M:%S)" > .env
# echo "TZ=$(cat /etc/timezone)" >> .env
# echo "USERID=$(id -u)" >> .env
# echo "GROUPID=$(id -g)" >> .env
# echo "LOCAL=$WORK_DIR" >> .env
# echo "PORT=$PORT" >> .env
echo "COMPOSE_PROJECT_NAME=$WORK_DIR" >> .env



# start docker compose
docker compose up -d
echo -e 'Notes:\n'
echo -e "\tStarting Rstudio server at: \033[0;32mhttp://localhost:$PORT\033[0m" >&2
echo -e '\tTo stop the server, run: \033[0;32mdocker compose down\033[0m' >&2
echo -e '\tTo see logs, run: \033[0;32mdocker compose logs -f\033[0m' >&2
echo -e '\tDocker compose commands should be run in the same directory as the compose file\n' >&2
echo 'Streaming logs... [Ctrl+C to stop streaming logs]' >&2
docker compose logs -f
    
